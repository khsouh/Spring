<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
  <!-- beans:beans를 쓰는이유? beans와 다르게 버전을 명시하지 않아도 객체를 불러와서 기능은 똑같다. -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> <!-- 주소에 /resources/를 사용하면 resources파일로 부터 찾는다 -->
  <resources location="file:///C:/_web/_spring/upimg/" mapping="/images/*"/>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"><!--컨트롤러 단에서 리퀘스트 요청을 내부적으로 재해석해서 view로 전달합니다.내가원하는 페이지로갈때 필요한 리퀘스트값을 해석  -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" /><!--컨트롤러에서 넘겨준 리퀘스트의 앞에  /WEB-INF/views/붙이고 맨뒤에 .jsp붙인다.-->
	</beans:bean>
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	   <beans:property name="maxUploadSize" value="5242880"></beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.myweb.ctrl" /><!-- 컴포넌트로 등록된 컨트롤을 스캐닝해서 받아옵니다. -->
	<context:component-scan base-package="com.myweb.util"/>
	
	
</beans:beans>
